<%- include ('../nav/header')  %>        
<!-- Sidebar Page -->
<%- include('../nav/sidebar') %>
 <a href="/workordernew/add" class="btn btn-gradient-primary btn-rounded btn-fw f-r m-b-20" id="addbutton">New</a>
 <br/>
<div class="col-lg-12 grid-margin stretch-card">
    <div class="card overflow-x overflow-y-hidden" id="table">
        <div class="card-body">
            <h4 class="card-title">Work Order</h4>
            <div class="form-group">
             <!--Search Filter-->
					  <input type="search" placeholder="Search Here" class="form-control search-input" data-table="customers-list"/>
            </div>
            <table class="table table-striped mt32 customers-list">
                <thead>
                <tr>
                <th>CCODE</th>
                <th>VENDOR_NO</th>
                <th>WORK_ORDER</th>
                <th>WORK_OR_DATE</th>
                <th>DURATION</th>
                <th>WORKMEN_TOT</th>
                <th>Action</th>
                </tr>
                </thead>
                <tbody>

                <% data.forEach(function(work_order){ %>
                <tr>
                <td class="py-1"><%= work_order.CCODE   %> </td>
                <td><%= work_order.VENDOR_NO  %> </td>
                <td> <%= work_order.WORK_ORDER  %> </td>
                <td>
                  <label class="badge badge-gradient-info">
                    <%= work_order.WORK_OR_DATE.toISOString().substring(0, 10); %>
                  </label>
                </td>
                <td> <%= work_order.DURATION   %></td>
                <td> <%= work_order.WORKMEN_TOT  %> </td>
                <td>
                  <a href="work_edit/<%= work_order.id %>/<%= work_order.WORK_ORDER   %>" class="btn btn-sm btn-primary">Edit</a>
                </td>
                </tr>
                        
                <% }) %>
                </tbody>
				</table>
        <br/><br/>
        </div>
    </div>
</div>

<!-- Footer Page-->
<%- include('../nav/footer') %>



<script type="text/javascript">
  window.onload = function() {

    document.getElementById("newform").style.display = "none";

  };

  function addWorkOrder(a) {
  
    if (a == 1) {
      //document.getElementById("newform").style.display = "block";
	  //document.getElementById("table").style.display = "none";
      //document.getElementById("addbutton").style.display = "none";
      $.ajax({
			url: '/workordernew/add',
			type: 'GET',
			//data: { "id": data }
			}).done(function(response){
			//callback to handle if it's successful
		})
    } else {
      document.getElementById("newform").style.display = "none";
    } 
  }
</script> 

<!-- Pagination Start-->
<!-- <script>
  getPagination('#table-id');

  function getPagination(table) {
    var lastPage = 1;

    $('#maxRows')
      .on('change', function (evt) {
        //$('.paginationprev').html('');						// reset pagination

        lastPage = 1;
        $('.pagination')
          .find('li')
          .slice(1, -1)
          .remove();
        var trnum = 0; // reset tr counter
        var maxRows = parseInt($(this).val()); // get Max Rows from select option

        if (maxRows == 5000) {
          $('.pagination').hide();
        } else {
          $('.pagination').show();
        }

        var totalRows = $(table + ' tbody tr').length; // numbers of rows
        $(table + ' tr:gt(0)').each(function () {
          // each TR in  table and not the header
          trnum++; // Start Counter
          if (trnum > maxRows) {
            // if tr number gt maxRows

            $(this).hide(); // fade it out
          }
          if (trnum <= maxRows) {
            $(this).show();
          } // else fade in Important in case if it ..
        }); //  was fade out to fade it in
        if (totalRows > maxRows) {
          // if tr total rows gt max rows option
          var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
          //	numbers of pages
          for (var i = 1; i <= pagenum;) {
            // for each page append pagination li
            $('.pagination #prev')
              .before(
                '<li data-page="' +
                i +
                '">\
<span class="btn m-t-10 btn-icon fs-20">' +
                i++ +
                '<span class="sr-only">(current)</span></span>\
</li>'
              )
              .show();
          } // end for i
        } // end if row count > max rows
        $('.pagination [data-page="1"]').addClass('active'); // add active class to the first li
        $('.pagination li').on('click', function (evt) {
          // on click each page
          evt.stopImmediatePropagation();
          evt.preventDefault();
          var pageNum = $(this).attr('data-page'); // get it's number

          var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

          if (pageNum == 'prev') {
            if (lastPage == 1) {
              return;
            }
            pageNum = --lastPage;
          }
          if (pageNum == 'next') {
            if (lastPage == $('.pagination li').length - 2) {
              return;
            }
            pageNum = ++lastPage;
          }

          lastPage = pageNum;
          var trIndex = 0; // reset tr counter
          $('.pagination li').removeClass('active'); // remove active class from all li
          $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
          // $(this).addClass('active');					// add active class to the clicked
          limitPagging();
          $(table + ' tr:gt(0)').each(function () {
            // each tr in table not the header
            trIndex++; // tr index counter
            // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
            if (
              trIndex > maxRows * pageNum ||
              trIndex <= maxRows * pageNum - maxRows
            ) {
              $(this).hide();
            } else {
              $(this).show();
            } //else fade in
          }); // end of for each tr in table
        }); // end of on click pagination list
        limitPagging();
      })
      .val(5)
      .change();

    // end of on select change

    // END OF PAGINATION
  }

  function limitPagging() {
    // alert($('.pagination li').length)

    if ($('.pagination li').length > 7) {
      if ($('.pagination li.active').attr('data-page') <= 3) {
        $('.pagination li:gt(5)').hide();
        $('.pagination li:lt(5)').show();
        $('.pagination [data-page="next"]').show();
      } if ($('.pagination li.active').attr('data-page') > 3) {
        $('.pagination li:gt(0)').hide();
        $('.pagination [data-page="next"]').show();
        for (let i = (parseInt($('.pagination li.active').attr('data-page')) - 2); i <= (parseInt($('.pagination li.active').attr('data-page')) + 2); i++) {
          $('.pagination [data-page="' + i + '"]').show();

        }

      }
    }
  }

  $(function () {
    // Just to append id number for each row
    $('table tr:eq(0)').prepend('<th> ID </th>');

    var id = 0;

    $('table tr:gt(0)').each(function () {
      id++;
      $(this).prepend('<td>' + id + '</td>');
    });
  });

//  Developed By Yasser Mas
// yasser.mas2@gmail.com

</script> -->

  <!--Table Sort-->
  <script>
    (function(document) {
      'use strict';
  
      var TableFilter = (function(myArray) {
        var search_input;
  
        function _onInputSearch(e) {
          search_input = e.target;
          var tables = document.getElementsByClassName(search_input.getAttribute('data-table'));
          myArray.forEach.call(tables, function(table) {
            myArray.forEach.call(table.tBodies, function(tbody) {
              myArray.forEach.call(tbody.rows, function(row) {
                var text_content = row.textContent.toLowerCase();
                var search_val = search_input.value.toLowerCase();
                row.style.display = text_content.indexOf(search_val) > -1 ? '' : 'none';
              });
            });
          });
        }
  
        return {
          init: function() {
            var inputs = document.getElementsByClassName('search-input');
            myArray.forEach.call(inputs, function(input) {
              input.oninput = _onInputSearch;
            });
          }
        };
      })(Array.prototype);
  
      document.addEventListener('readystatechange', function() {
        if (document.readyState === 'complete') {
          TableFilter.init();
        }
      });
  
    })(document);
  </script>